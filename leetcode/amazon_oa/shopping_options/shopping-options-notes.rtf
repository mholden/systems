{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww20080\viewh15160\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 https://cybergeeksquad.co/2021/06/shopping-options-amazon-online-assessment.html\
-not leetcode, but an amazon online assessment question\
\
post notes:\
-took me 2 hrs to code this and still not done\
-my solution works, but it took me way too long to code it\
\
\
brainstorming:\
\
brute force:\
-start with 1, find all combinations that add to 4\
 - then add 1 to the start of all those combinations\
-then do the same for 2, 3, 4, 5\
\
-seems like we\'92ll only need to loop up to n/2\
-when we move to finding combinations for 2, we want to exclude any solutions that use 1\
\
// exclude means exclude solutions with numbers less than or equal to exclude\
\
so(int target, int exclude)\
\
if solutions[target], then just return those solutions\
\
for (int i = 1; i < target/2; i++) \{\
	recurse(n-i, i-1, &solutions[n-1]);\
	build solutions[target]\
\}\
\
init function builds solutions for 1 (which is just 1)?\
-i don\'92t think we need to do this\
\
\
keep track of all solutions\
solutions[1]\
solutions[2]\
etc.\
\
\
\
another attempt (post trying my first time)\
-what if you thought about it as a combinatorics problem\
-starting with 1, try 1, 2, 3, 4\
push 1, as long as less than target, try 1, 2, 3, 4\
-i think this is the general approach they take in their solution}